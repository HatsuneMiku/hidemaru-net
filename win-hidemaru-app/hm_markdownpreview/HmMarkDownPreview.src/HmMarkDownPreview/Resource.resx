<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="md" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAATDQ4PJxUWGDIVFhgyDQ4PJwAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgI
        CB5FR0xliYyTq72+wdzSz8ry2tTL+9rUy/vSz8ryvb/B3ImNlKtFR0xlCAgIHgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQE
        BRlqbXOKzM3Q5+ravv/kvXn/2aRH/9OXLv/QkiP/0JIj/9OXLv/ZpEf/5L15/+ravv/MzdDnam1zigQE
        BRkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzNDZPvsHG2u3atf/Ypkj/zIsR/8uJC//MjBH/zI0U/82OFf/NjhX/zI0U/8yMEf/LiQv/zIwR/9im
        R//t2rX/vsHG2jM0Nk8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAT1FVbuXj4Pziu27/zI0N/82OEf/Nkhn/zZIZ/86SGf/Okhn/zZIZ/82RGf/Okhn/zpIZ/82S
        Gf/NkRn/zY8R/8yMDf/iu27/5ePg/E9RVW4AAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8AAAAAAAAA
        AAAAAAAAAAAAAFBSV27t6eD/2KlF/8yPDP/OlRr/zpUa/86VGv/OlRr/zpUa/86VGv/OlRr/zpUa/86V
        Gv/OlRr/zpUa/86VGv/OlRr/zpUa/8yPDP/YqUX/7eng/1BSV24AAAAAAAAAAAAAAAAAAAAA////AP//
        /wAAAAAAAAAAAAAAAAAvMTNI5OLe+dqtSf/Nkw//z5gc/8+YHP/PmBz/z5gc/8+YHP/PmBz/z5gc/8+Y
        HP/PmBz/z5gc/8+YHP/PmBz/z5gc/8+YHP/PmBz/z5gc/82TD//arUn/5eLe+S8xM0gAAAAAAAAAAAAA
        AAD///8A////AAAAAAAAAAAABwcIE77Axtnlw3T/zZUO/8+bHf/Pmx3/z5sd/8+bHf/Pmx3/z5sd/8+b
        Hf/Pmx3/z5sd/8+bHf/Pmx3/z5sd/8+bHf/Pmx3/z5sd/8+bHf/Pmx3/z5sd/82VDv/lw3T/vsDG2QcH
        CBMAAAAAAAAAAP///wD///8AAAAAAAAAAABmaW9/8uO9/8+aFf/QnR3/0J4e/9CeHv/Qnh7/0J4e/9Ce
        Hv/Qnh7/0J4e/9CeHv/Qnh7/0J4e/9CeHv/Qnh7/0J4e/9CeHv/Qnh7/0J4e/9CeHv/Qnh7/0J4d/8+a
        Ff/y473/ZmhvfwAAAAAAAAAA////AP///wAAAAAACQkKFMvLzePeuVP/z54W/9ChH//Qnxv/0J8a/9Cg
        Hf/QoR//0KEf/9GhH//QoR//0KAc/8+fGv/QoBz/0KEf/9ChH//QoR//0aEf/9ChH//QoR7/0KEf/9Gh
        H//QoR//z54V/965U//Ly83jCQkKFAAAAAD///8A////AAAAAABFR01Z8OTG/9GjHP/Rox//0aUi/9au
        Of/XsDz/06gq/9GkH//RpCD/0aQg/9GkH//UqzH/17A9/9WsNP/RpCD/0aQg/9GkIP/RpCD/0aMe/9Gl
        Iv/Rox3/0aQh/9GkIP/RpCD/0aMb//Dlxv9FR01ZAAAAAP///wD///8AAAAAAIuNlZ7t1Y3/0KMV/9Gm
        Hv/UrS//9vDY//z69P/hxWz/z6MX/9GmHv/Rph//0KMY/+vXnP/9/fr/7+Gz/9CkGv/RpyH/0qch/8+i
        FP/jynr/8OO5/9KnIv/RpR3/0qci/9KnIf/QoxT/7dWO/4uNlZ4AAAAA////AP///wABAAEFubq9zePE
        Xv/Rpxr/0akf/9WwMf/48+D//v38/+LIcP/PpBL/1rE1/9StK//PpRb/7Nuh///////w5Lr/0acb/9Kq
        Iv/QpRX/38Nj//z68P/+/v3/7d2n/9GoHP/RqSD/0qoj/9GnGv/jxF7/ubq9zQEAAQX///8A////AAsL
        DRTS0Mvl3bxD/9KrH//SrCD/1rIy//n04v///v7/4sht/9GqGv/07Mz/69qd/8+lDv/s3KL///////Hl
        u//Rqh3/0aka/92/Vv/8+fD//Pv1//v58P//////69mZ/9GqHf/TrSP/0qwf/928Q//S0MvlCwsNFP//
        /wD///8AERIVHd3a0PDauTj/068h/9KvIf/WtTT/+fXk///////hyGj/6diT///////+/vz/38Zi/+ra
        mP//////8ee9/9GsGf/YuT7/9u/V//r46//8+vH//Pv0//r36v/7+O3/5M53/9KtHf/TryH/2rk4/93a
        0PAREhUd////AP///wAREhUc3dvR79u8Ov/TsiL/07Ii/9e4Nf/69uf//v36//Pqw//9/Pb//fz2//7+
        /P/69eT/9OzJ///////y6cD/07Ae/9a2L//WuDP/2bxA//r36P////7/5dF8/9W0Kf/XuTb/1LMm/9Oy
        Iv/bvDr/3dvR7xESFRz///8A////AAoKDBHT0s3j38VI/9S1Iv/UtSP/17s2//r36f/+/fz//v//////
        ///k0HT/7N+f///////+/vz///////Pqwv/TtCD/1LYm/9O0IP/XujT/+vfp///////k0XX/0rEZ/9S2
        Jf/Utif/1LUi/9/FSP/T0s3jCgoMEf///wD///8AAAABAru8wMjn0mX/1Lcf/9S4Jf/Yvjj/+/nt////
        ////////7eKl/9K0Gf/Wuir/9vDS////////////8+zF/9S3If/VuSj/1Lgk/9i+OP/7+e3//////+XT
        ef/TtR3/1bkp/9W5Kf/Utx//59Jl/7u8wMgAAAEC////AP///wAAAAAAi4yVlfTmmf/UuR3/1bsm/9jB
        Of/7+Oz//v78//Xvy//WvS3/1bsm/9S5If/cxkn/+vjp//7+/P/z7MX/1Loi/9a8Kf/Vuyb/2cE5//r4
        7P/+/vz/5dV5/9O5Hv/WvSr/1rwq/9S5Hf/05pn/i42WlQAAAAD///8A////AAAAAABERUtM9/LS/9e/
        KP/Wvyn/18At/9vIRv/cyEj/2MIz/9W+J//WwCv/1sAr/9W+Jf/ZxT3/3MhI/9rGQP/Wvyr/1r8r/9a/
        Kv/XwC3/28hG/9zISP/Ywzb/1r8p/9bAK//Wvyr/178o//fy0v9ERUtMAAAAAP///wD///8AAAAAAAcH
        CArR0NTa59dl/9XAIv/Xwiz/1sEn/9bBJ//Xwir/18It/9fCLP/Xwiz/18Is/9bBKf/WwSf/1sEo/9fC
        Lf/Xwiz/18Is/9fCLP/WwSf/1sEn/9fCKv/Xwi3/18It/9XAIv/n12X/0dDU2gcHCAoAAAAA////AP//
        /wAAAAAAAAAAAGRkbGn++dH/18Qn/9fFLP/XxS3/18Ut/9fFLf/XxS3/18Ut/9fFLf/XxS3/18Ut/9fF
        Lf/XxS3/18Ut/9fFLf/XxS3/18Ut/9fFLf/XxS3/18Ut/9fFLf/XxSz/18Qn//750f9kZGxpAAAAAAAA
        AAD///8A////AAAAAAAAAAAABgYGCMXGzcvx6Iz/1cUg/9jIL//YyS//2Mku/9jJLv/YyC7/2Mkv/9jJ
        Lv/YyS7/2Mgu/9jJL//YyS7/2Mku/9jILv/YyS//2Mku/9jJLv/YyC7/2Mkv/9XFIP/x6Iv/xcbNywYG
        BggAAAAAAAAAAP///wD///8AAAAAAAAAAAAAAAAAKiotLfHx8PPn3Wb/1sgi/9nMMP/YzDD/2Mww/9jM
        MP/ZzDD/2Mww/9jMMP/YzDD/2cww/9jMMP/YzDD/2Mww/9nMMP/YzDD/2Mww/9nMMP/WyCL/591m//Hx
        8PMqKy0tAAAAAAAAAAAAAAAA////AP///wAAAAAAAAAAAAAAAAAAAAAATE1RT/n58vro4Gj/1ssi/9nO
        MP/ZzzH/2c8x/9nPMf/ZzzH/2c8x/9nPMf/ZzzH/2c8x/9nPMf/ZzzH/2c8x/9nPMf/ZzjD/18si/+jg
        aP/5+fH6TE1RTwAAAAAAAAAAAAAAAAAAAAD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAT09UUO/v
        7vDy7I7/2dEs/9jQKf/a0TL/2tIy/9rSMv/a0jL/2tIy/9rSMv/a0jL/2tIy/9rSMv/a0TH/2NAp/9nR
        LP/y7Y7/7/Du8E9PVFAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKiotK8fIz8b//9f/6uVp/9rUL//Y0if/2dMr/9nULv/a1DD/2tQw/9rULv/Z0yv/2NIn/9rU
        L//q5Wn////X/8fIz8YqKiwrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAwMDA2NjaWLR0dTQ//7d//v4qP/u63b/5uNX/+LfSf/i30n/5uNX/+7s
        dv/7+Kj///7d/9HR1NBjY2liAwMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDBANGRkxEjY6Xi8DByL/a2tnb5OTa6OTk
        2uja2tnbwMDHv42Nl4tGRkxEAwMEAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICARQV
        FxQfHyMfHx8jHxQVFxQCAgIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A///////4H///wAP//wAA//4AAH/8AAA/+AAAH/AAAA/gAAAH4AAAB8AA
        AAPAAAADwAAAA8AAAAOAAAABgAAAAYAAAAGAAAABwAAAA8AAAAPAAAADwAAAA+AAAAfwAAAP8AAAD/gA
        AB/8AAA//gAAf/+AAf//4Af///w///////8=
</value>
  </data>
</root>