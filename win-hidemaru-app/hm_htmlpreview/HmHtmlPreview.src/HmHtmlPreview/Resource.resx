<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ie" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAD+/QAA15sTFdGPF4jQjhjd0Y8Y6NGPGNjSkBfG0I8XodOMGFnVkxYP1ZcXANWfEwDUlhYF0o0XN9CP
        GW/RjxiZ0o8Ys9GPGLzRjxi105QXntGQGHXTkxc9zY4XCdahFADZnhIA0pEWANeXFgDQjRYA4rgNAP//
        AAD//wAA//8AAOTDDh/SkxfV0ZAY/9SSFqDRjhc10I4XINOXFTPVmxVm0pIYqtKSF7zTkhh10pYWc9KR
        GNLRjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjhj/0Y8Y/9GPGP/QjhjY1ZsWfdeYExfTkhYA15cWANCN
        FgDiuA0A//8AAP//AAD//wAAzogantGOGf/QlRWo0pgRANGOGADOiBgA05cUANeeFQDVmBUA1JUVftGO
        GP/Rjhj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjhj/0Y4Y49OS
        F2LXlxYA0Y0WAOK4DQD//wAA//8AAP//AADSkRjd0Y4Y/9WXFkbXmhUA05MXAOK6DwDkvgwA0YsYBtKR
        F5XRjxj+0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y4Y/9OTF6DQjBcK4rgNAP//AAD//wAA//8AANGPGOzRjxj/0I0ZNc2HGwDgsRMA//8AAO3U
        BwfOhxmu0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/8+IGbrjugwN//8AAP//AAD//wAA0ZAY59GPGf/TlBJM05MQAOXH
        BADu3QAA3KkSoM+MGf/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0IwZ/9qjE7Hu3AED7NoAAOzbAADRkBjU0Y8Y/9ST
        F4bYmRQA7aYEAN+bDGbOixn/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj40Y8XzNGQ
        GLHSkBe40pAY29GOGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/z4sZ/9GVEH7csAgA3LEIANCP
        GLHRjhj/0o8Y09ibFgDgqRIX0pAY7NGOGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Sjxj/0ZEWmNKV
        FyrRjhYA0JEXANSSFgDTkxYJ1JcUStKPF8nQjRn/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/05IZ+N2V
        FyzfkxYAz44XetGPGP/Rjxj/1JcWNtCQGH3Rjhj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0I4Y/NSO
        EmDVlBMA0ZcWANGOFgDQkRcA1JIWANKTFgDVnBIA1JEVCdqfFKnQjhj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjhj/05IWrdecEwDVmBQ40Y8Y/9GPGP/QkRfG0Y8X4dGPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GN
        Gf/QnhCAzq4GANacEQDRlRcA0I4WAM+QFwDTkRYA0ZIWANWaEwDjsg8A8NUJCdWXF8DQjhno0Y8Y6NGP
        GOjRjxjo0Y8Y6NGPGOjRjxjh0ZIXH9WjDAbSkRfX0Y8Z/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjhj/05MX5N6vEAzdrxAA0pkVAM2NGQDMjBkAzIwZAMyMGQDMjBkAzpAXANWSFQDZkBIA1Y8VBc+P
        GA/PjxgPz48YD8+PGA/PjxgPz48YD8+PGBHRkRcG2o0QANaPFX7Rjxn/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/Tkhef1psVANGWFwDLixkAzIwZAMyMGQDMjBkAzIwZAMyMGQDLixkAy4saAM2K
        GQDPjBgAzY4ZAM2NGQDNjRkAzY0ZAM2NGQDNjRkAzo0ZAMyPFwDZog8A2J8QHdGPF/LRjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9COGILMixkLy4sZDMyMGQzMjBkMzIwZDMyMGQzMjBkMzIwZDMyM
        GQzMjBkMzIwZDMyMGQzMjBkMzIwZDMyMGQzMjBkMzIwZDMyMGQzMjBkMyo4XCtOnAQDSpwEA05sQkdGO
        Gf/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y79COGOHQjxji0I8Y4tCPGOLQjxji0I8Y4tCP
        GOLQjxji0I8Y4tCPGOLQjxji0I8Y4tCPGOLQjxji0I8Y4tCPGOLQjxji0I8Y4tCPGOLQjxjN3pESAN6R
        EgDbjhMb0IsY7tGPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GPPgtA4A4LQOAOC0DQDbpxN30Y0Z/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y6um+DADpvgwA6b4MAOO1DQjQkhXP0Y4Z/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y59GP
        GNPRjxjU0Y8Y1NGPGNTRjxjU0Y8Y1NGPGNTRjxjU0Y8Y1NGPGNTRjxjT0Y8X4tGPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/TkRfa9u0AAPbtAAD27gAA7OUAAM6rCTbPiBn60Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/TjhaJ0o4WA9CQFgTRjxYE0Y8WBNGPFgTRjxYE0Y8WBNGPFgTRjxYE0Y8WBNGPGAPRkBhv0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9KRGLrXsw4A17MOANezDwDYrQ4p58gEAeS/DXTPjBn/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGMPSihoA04kaANGNFwDRjxYA0Y8WANGPFgDRjxYA0Y8WANKRFQDRkRUA0I0ZANGO
        GavRjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0o4ZgdGwDADRsAwA0bAMANCoEDTeqxOV8dIKAN2e
        EqbPixn/0Y8Y/9GPGP/Rjxj/0Y0Z/d2ZEkXkpw0A2p0SANOTFQDSjxYA0Y8XANGOFwDSjRYA1pcWANeo
        DADVog4u0ZAY9tGPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/QkBQ30pgSANKYEgDSmBIA0pkSAM6L
        GMXTihqX6ZQMA9iZFMDQjhj/0Y8Y/9GPGP/Rjhj/1JkV3tuyDyLXqg8A15cUANOQFQDRjhgA0I0ZANON
        FgDTjRsA1qURFNOWFc3Rjhn/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjhj/0pIXyNalEALWlRYA1pUWANaV
        FgDWlRYA15YXQtCOGP/XmBaX2aASFdCMGcTQjhj/0Y8Y/9GPGP/RjRj/0Y4Y3dahEkjXlxQA05AVANGO
        GADQjRkA044WANOPGjvRkBjP0Y4Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/XnhNS2KIRAN6d
        EQDenREA3p0RAN6dEQDdnBEA0pMXps+NGf/Qixm41ZQXOtaYFcHQjhj/0Y8Y/9GPGP/Rjhj/0Y8Y/9OR
        F8DSkBeD0Y8YbdGOGX/Rjxe40Y8Y/NGPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Qjxj/0I0Z7+Cz
        EEXlww0A86AFAPOgBQDzoAUA86AFAPOgBQDxnAcV1Y8W3NCPGP/Skhfl1ZUVjNKOGNnRjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0ZAZ/9aK
        FdvZihBH0pUXiNibFQD/5wAA/+cAAP/nAAD/5wAA/+cAAP/nAADoxAkwzooZ6dGOGP/Rjhj/0o8Y79GP
        GP7Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Qjhnu7sEJNNuZEADRjxiX3p8UCv//AAD//wAA//8AAP//AAD//wAA//8AAOnRCADOjBgz0ZAX3dGO
        GP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0pEX49KSFzvpzAsA0pIZANGPGJDRnRQd//8AAP//AAD//wAA//8AAP//AAD//wAA6c4JAM6P
        FwDVlBMc0ZIWsNGOGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0Y8Y/9KTF7bZoxMi05UWANWXFgDRjxgA0Y8YmtKOFCD//wAA//8AAP//AAD//wAA//8AAP//
        AADpzgkAzo8XANWVEgDUlRQA05IVWtGQGM7Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GPGP/Rjxj/0Y8Y/9GP
        GP/Rjxj/0ZAY/tKQGMTUlhdP1p0VANacFQDSjhcA0I4WAMyRGBbRjhjA1ZYVDP//AAD//wAA//8AAP//
        AAD//wAA//8AAOnOCQDOjxcA1ZUSANSUFADSlRQA05MVBdaXFEjUkReX0JAYztGPGO3Rjxj50Y8Y/dGP
        GP3Rjxj/0Y8Y/9GPGP/RkBj90ZEXrNWYFkbVmRYZ0IsZBNKNGALQkRQjzY4YwdmfFZ7grhEA//8AAP//
        AAD//wAA//8AAP//AAD//wAA6c4JAM6PFwDVlRIA1JQUANKVFADTkxUA2JoSANaTFgDQlBYB0ZMUFdOV
        FSjRjxguzo8WLtGQFnTRjxfN0Y8Y/9GOGP/Rjhj/0Y8Y/9GPGPfRjxja0Y8Y2tGNGP/TlRbp58wFHO3b
        AQD//wAA//8AAP//AAD//wAA//8AAP//AADpzgkAzo8XANWVEgDUlBQA0pUUANOTFQDYmhIA1pMWANCU
        FgDRkxQA05YVANGPGADOjxUA0JEUAM6OFgLTlRc005YVddKRF6zRkBfP0Y8Y5dGPGOzRjxja0IkYnOK3
        DSP+/QAA/fsAAP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8AgDgD/wAAAH8fgAA/HwAADx4AAAccAAAHGAAAAxAA8AEAA/wBAAf+AIAH
        /wGAD///gAAAAMAAAADAAAAA4AAAAPAAAADwD/4A6A/+AOQH/ADyA/gB8AHwAfgAAAH4AAAB/AAABP4A
        AAz/AAAc/8AAeP/wADH//gAB///4A/////8=
</value>
  </data>
</root>